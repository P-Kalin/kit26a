/**
 * <p>
 * <b> Лабораторна робота №13 "Паралельне виконання. Багатопоточність"</b>
 * </p>
 * <b><i> Мета роботи: </i></b><br>
 * Ознайомлення з моделлю потоків Java.Організація паралельного виконання
 * декількох частин програми.<br>
 * <br>
 * <b> Завдання/Вимоги: </b><br>
 * <ol>
 * <li>Використовуючи програми рішень попередніх задач, продемонструвати
 * можливість паралельної обробки елементів контейнера: створити не менше трьох
 * додаткових потоків, на яких викликати відповідні методи обробки
 * контейнера.</li>
 * <li>Забезпечити можливість встановлення користувачем максимального часу
 * виконання (таймаута) при закінченні якого обробка повинна припинятися
 * незалежно від того знайдений кінцевий результат чи ні.</li>
 * <li>Для паралельної обробки використовувати алгоритми, що не змінюють
 * початкову колекцію.</li>
 * <li>Кількість елементів контейнера повинна бути досить велика, складність
 * алгоритмів обробки колекції повинна бути зіставна, а час виконання приблизно
 * однаковий, наприклад:</li>
 * <ul>
 * <li>пошук мінімуму або максимуму;</li>
 * <li>обчислення середнього значення або суми;</li>
 * <li>підрахунок елементів, що задовольняють деякій умові;</li>
 * <li>відбір за заданим критерієм;</li>
 * <li>власний варіант, що відповідає обраній прикладної області.</li>
 * </ul>
 * </ol>
 * <b>Прикладна задача:</b><br>
 * <i>Бюро знайомств. Запис про клієнта: стать; реєстраційний номер; дата
 * реєстрації; відомості про себе (довільний набір властивостей: ім’я, зріст,
 * колір очей, дата народження, хобі тощо); вимоги до партнера (довільний набір
 * властивостей).</i><br>
 * <br>
 * 
 * @author student Lytvyn I.I. KIT-26A
 */

package ua.khpi.oop.lytvyn13;