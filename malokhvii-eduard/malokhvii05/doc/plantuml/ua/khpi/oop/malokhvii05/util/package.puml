@startuml

    namespace ua.khpi.oop.malokhvii05.util {

        class Array<E> {
            {static} -DEFAULT_INITIAL_CAPACITY: int
            {static} -serialVersionUID: long
            -data: Object[]
            -size: int
            +Array()
            +Array(Collection<?>)
            +Array(int)
            +add(E): boolean
            +add(int, E): void
            +addAfter(int, E): void
            +addAll(Collection<?>): boolean
            +addBefore(int, E): void
            +addFirst(E): void
            +addLast(E): void
            +clear(): void
            +contains(Object): boolean
            +containsAll(Collection<?>): boolean
            +firstIterator(): Array.ArrayIterator
            +get(int): E
            +getData(): Object[]
            +getFirst(): E
            +getLast(): E
            +indexOf(Object): int
            +isEmpty(): boolean
            +iterator(): Iterator<E>
            +iterator(int): Array.ArrayIterator
            +lastIterator(): Array.ArrayIterator
            +remove(int): void
            +remove(Object): boolean
            +removeAll(Collection<?>): boolean
            +removeFirst(): void
            +removeLast(): void
            +retainAll(Collection<?>): boolean
            +set(int, E): E
            +setFirst(E): E
            +setLast(E): E
            +size(): int
            +toArray(): Object[]
            +toArray(T[]): T[]
            +toString(String): String
            -ensureCapacity(int): void
            -isIndexInRange(int): boolean
            -isNewElementIndexInRange(int): boolean
            -readObject(ObjectInputStream): void
            -removeElement(int): void
            -writeObject(ObjectOutputStream): void
        }

        class ua.khpi.oop.malokhvii05.util.Array.ArrayIterator {
            -nextIndex: int
            -ArrayIterator(int)
            +hasNext(): boolean
            +hasPrevious(): boolean
            +next(): E
            +previous(): E
            +remove(): void
        }

        interface java.util.Collection<E> {
            {abstract} +size(): int
            {abstract} +isEmpty(): boolean
            {abstract} +contains(Object): boolean
            {abstract} +iterator(): Iterator<E>
            {abstract} +toArray(): Object[]
            {abstract} +toArray(T[]): T[]
            {abstract} +add(E): boolean
            {abstract} +remove(Object): boolean
            {abstract} +containsAll(Collection<?>): boolean
            {abstract} +addAll(Collection<?>): boolean
            {abstract} +removeAll(Collection<?>): boolean
            {abstract} +retainAll(Collection<?>): boolean
            {abstract} +clear(): void
        }
        java.util.Collection <|.. Array

        interface java.io.Serializable
        java.io.Serializable <|.. Array

        interface java.util.Iterator<E> {
            {abstract} +hasNext(): boolean
            {abstract} +next(): E
        }
        java.util.Iterator <|.. ua.khpi.oop.malokhvii05.util.Array.ArrayIterator

        Array +-- ua.khpi.oop.malokhvii05.util.Array.ArrayIterator

    }

@enduml
