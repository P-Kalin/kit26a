@startuml

    class SubscriberRegistry {
        {static} -flattenHierarchyCache: LoadingCache<Class<?>, ImmutableSet<Class<?>>>
        {static} -subscriberMethodsCache: LoadingCache<Class<?>, ImmutableList<Method>>
        -eventBus: WeakReference<EventBus>
        -subscribers: ConcurrentMap<Class<?>, Set<Subscriber>>
        +SubscriberRegistry(EventBus)
        {static} -getAnnotatedMethods(Class<?>): ImmutableList<Method>
        {static} -getAnnotatedMethodsNotCached(Class<?>): ImmutableList<Method>
        {static} -getFlattenHierarchy(Class<?>): ImmutableSet<Class<?>>
        -findAllSubscribers(Object): Multimap<Class<?>, Subscriber>
        +getSubscribers(Object): Iterator<Subscriber>
        -newSubscriberEntry(Object, Method, SubscriberMetadata): Subscriber
        +register(Object): void
        +removeUnusedSubscribers(): void
        +unregister(Object): void
    }

@enduml
