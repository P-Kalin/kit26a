@startuml

    namespace ua.khpi.oop.malokhvii05.common.eventbus.publish {

        class EventServiceBuilder {
            ~dispatcher: Dispatcher
            ~exceptionHandler: SubscriberExceptionHandler
            ~executor: Executor
            -EventServiceBuilder()
            {static} +newBuilder(): EventServiceBuilder
            +setDispatcher(Dispatcher): EventServiceBuilder
            +setExceptionHandler(SubscriberExceptionHandler): EventServiceBuilder
            +setExecutor(Executor): EventServiceBuilder
            +imediate(): EventServiceBuilder
            +asynchronous(): EventServiceBuilder
            +build(): EventService
        }

        class EventService {
            ~EventService(EventServiceBuilder)
            +subscribe(Object): void
            +unsubscribe(Object): void
            +publish(Object): void
            +isSubscriber(Object): boolean
            +getDispatcher(): Dispatcher
            +getExecutor(): Executor
            +setDispatcher(Dispatcher): void
        }

        class EventBus {
            -cleanupAvailable: boolean
            -dispatcher: Dispatcher
            -exceptionHandler: SubscriberExceptionHandler
            -executor: Executor
            -subscribers: SubscriberRegistry
            +EventBus()
            +EventBus(Dispatcher)
            +EventBus(Dispatcher, Executor)
            +EventBus(Dispatcher, Executor, SubscriberExceptionHandler)
            +abortCleanup(): void
            +getDispatcher(): Dispatcher
            +getExecutor(): Executor
            +contains(Object): boolean
            +handleSubscriberException(Throwable, SubscriberExceptionContext): void
            +post(Object): void
            +register(Object): void
            +requestCleanup(): void
            +setDispatcher(Dispatcher): void
            +unregister(Object): void
        }

        class DeadEvent {
            -event: Object
            -eventBus: Object
            +DeadEvent(Object, Object)
            +getEvent(): Object
            +getEventBus(): Object
        }

        EventService --> EventBus: eventBus

    }

@enduml
