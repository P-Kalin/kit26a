@startuml

    namespace ua.khpi.oop.malokhvii05.common.specification {

        class Specifications {
            -Specifications()
            {static} +newEmptySpecification(): Specification<T>
            {static} +newDisjunctionSpecification(Specification<T>, Specification<T>): Specification<T>
            {static} +newConjuctionSpecification(Specification<T>, Specification<T>): Specification<T>
            {static} +newNegationSpecification(Specification<T>): Specification<T>
            {static} +newTrueSpecification(): Specification<T>
            {static} +newFalseSpecification(): Specification<T>
            {static} +newCompositeSpecification(): CompositeSpecification<T>
            {static} +newCompositeSpecification(Iterable<Specification<T>>): CompositeSpecification<T>
            {static} +newCompositeSpecification(Specification<T>[]): CompositeSpecification<T>
        }

        class SpecificationPair<T> {
            +SpecificationPair(Specification<T>, Specification<T>)
        }

        interface Specification<T> {
            +or(Specification<T>): Specification<T>
            +and(Specification<T>): Specification<T>
            +not(): Specification<T>
            +toPredicate(): Predicate<T>
            +toUtilPredicate(): Predicate<T>
            +iterator(): Iterator<Specification<T>>
            {abstract} +isSatisfiedBy(T): boolean
        }

        class NotFixedCompositeSpecification<T> {
            +NotFixedCompositeSpecification()
            +NotFixedCompositeSpecification(Specification<T>[])
            +NotFixedCompositeSpecification(Iterable<Specification<T>>)
        }

        class NegationSpecification<T> {
            ~NegationSpecification(Specification<T>)
            +isSatisfiedBy(T): boolean
        }

        class FixedCompositeSpecification<T> {
            -fixedSize: int
            +FixedCompositeSpecification(int)
            +FixedCompositeSpecification(int, Specification<T>[])
            +FixedCompositeSpecification(int, Iterable<Specification<T>>)
            +getFixedSize(): int
            +add(Specification<T>): boolean
        }

        class EmptySpecification<T> {
            {static} ~INSTANCE: Specification
            ~EmptySpecification()
            +isSatisfiedBy(T): boolean
        }

        class DisjunctionSpecification<T> {
            ~DisjunctionSpecification(Specification<T>, Specification<T>)
            +isSatisfiedBy(T): boolean
        }

        class ConjunctionSpecification<T> {
            ~ConjunctionSpecification(Specification<T>, Specification<T>)
            +isSatisfiedBy(T): boolean
        }

        interface CompositeSpecification<T> {
            +getUnsatisfied(T): Set<Specification<T>>
            +getSatisfied(T): Set<Specification<T>>
            +get(int): Specification<T>
            +set(int, Specification<T>): Specification<T>
            +add(Specification<T>): boolean
            +remove(int): Specification<T>
            +iterator(): Iterator<Specification<T>>
            +isSatisfiedBy(T): boolean
        }

        class ua.khpi.oop.malokhvii05.common.specification.CompositeSpecification.CompositeSpecificationIterator<T> {
            -CompositeSpecificationIterator(Iterator<Specification<T>>)
            +hasNext(): boolean
            +next(): Specification<T>
        }

        FixedCompositeSpecification <|-- SpecificationPair

        interface java.lang.Iterable<T> {
            {abstract} +iterator(): Iterator<T>
        }
        java.lang.Iterable <|.. Specification

        CompositeSpecification <|.. NotFixedCompositeSpecification

        Specification <|.. NegationSpecification

        CompositeSpecification <|.. FixedCompositeSpecification

        Specification <|.. EmptySpecification

        SpecificationPair <|-- DisjunctionSpecification

        SpecificationPair <|-- ConjunctionSpecification

        Specification <|.. CompositeSpecification

        interface java.util.Iterator<E> {
            {abstract} +hasNext(): boolean
            {abstract} +next(): E
        }
        java.util.Iterator <|.. ua.khpi.oop.malokhvii05.common.specification.CompositeSpecification.CompositeSpecificationIterator

        CompositeSpecification +-- ua.khpi.oop.malokhvii05.common.specification.CompositeSpecification.CompositeSpecificationIterator

        SpecificationPair --> Specification: first\nsecond

        Specification --> "*" Specification: specifications

        NotFixedCompositeSpecification --> "*" Specification: specifications

        NegationSpecification --> Specification: specification

        FixedCompositeSpecification --> "*" Specification: specifications

        ua.khpi.oop.malokhvii05.common.specification.CompositeSpecification.CompositeSpecificationIterator --> "*" java.util.Iterator: iterators

    }

@enduml
