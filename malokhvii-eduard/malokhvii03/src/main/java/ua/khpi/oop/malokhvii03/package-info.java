/**
 * Пакет, містить у собі розв'язок до лабораторної роботи
 * <a href="https://oop-khpi.github.io/#task_03">Утилітарні класи. Обробка
 * масивів і рядків</a>
 * <p>
 * Мета:
 * <ul>
 * <li>Розробка власних утилітарних класів.</li>
 * <li>Набуття навичок вирішення прикладних задач з використанням масивів і
 * рядків.</li>
 * </ul>
 * <p>
 * Вимоги:
 * <ol>
 * <li>Розробити та продемонструвати консольну програму мовою Java в середовищі
 * Eclipse для вирішення прикладної задачі за номером, що відповідає збільшеному
 * на одиницю залишку від ділення на 15 зменшеного на одиницю номера студента в
 * журналі групи (Class String, Manipulating Characters in a String, Comparing
 * Strings and Portions of Strings).</li>
 * <li>При вирішенні прикладних задач використовувати латинку.</li>
 * <li>Продемонструвати використання об'єктів класу StringBuilder або
 * StringBuffer.</li>
 * <li>Для обробки даних використовувати класи-утиліти (особливий випадок
 * допоміжного класу, див. Helper Class).</li>
 * <li>Забороняється використовувати засоби обробки регулярних виразів.</li>
 * </ol>
 * <p>
 * <b>Приклані задачі</b>
 * <ol>
 * <li>Ввести декілька рядків. Розбити рядки на три групи: починається з
 * голосної; починається з приголосної; починається не з букви. Знайти
 * найкоротший рядок в кожній групі. Вивести цей рядок та йогої довжину.</li>
 * <li>Ввести декілька рядків. Упорядкувати, а потім вивести рядки за алфавітом
 * (перший пріоритет) та в порядку зростання їх довжини (другий пріоритет).</li>
 * <li>Ввести декілька рядків. Розбити на дві групи: рядки, довжина яких менша
 * за середню; рядки, довжина яких не менше середньої. Вивести рядки та їх
 * довжину по групах.</li>
 * <li>Ввести текст. У кожному слові тексту k-ту літеру замінити заданим
 * символом. Якщо k більше довжини слова, видати повідомлення та заміну не
 * виконувати. Початкові дані та результат вивести у вигляді таблиці.</li>
 * <li>Ввести текст. У тексті кожну літеру замінити її номером в алфавіті.
 * Вивести результат наступним чином: в одному рядку друкувати текст з двома
 * пропусками між буквами, в наступному рядку під кожною буквою друкувати її
 * номер.</li>
 * <li>Ввести текст. З тексту видалити всі символи, крім пропусків, які не є
 * буквами. Пропуски, що повторюються, замінити на одиночні. Між послідовностями
 * літер, де знаходяться розділові знаки, залишити хоча б один пропуск ("a,b,c"
 * -"a, b, c"). Вивести початковий текст та результат.</li>
 * <li>Ввести текст. З тексту видалити всі слова заданої довжини, що починаються
 * на приголосну літеру. Вивести початковий текст та результат.</li>
 * <li>Ввести текст. У тексті знайти всі пари слів, з яких одне є обігом (словом
 * навпаки) іншого (наприклад: "abc"-"cba", "def"-"fed"). Результат вивести у
 * вигляді таблиці.</li>
 * <li>Ввести текст. Знайти та вивести, скільки разів повторюється в тексті
 * кожне слово. Результат вивести у вигляді таблиці.</li>
 * <li>Ввести текст. Визначити та вивести, яких літер (голосних чи приголосних)
 * більше в кожному реченні тексту. Результат вивести у вигляді таблиці.</li>
 * <li>Ввести текст. У тексті слова заданої довжини замінити зазначеним рядком.
 * Вивести початковий текст та результат.</li>
 * <li>Ввести текст. Текст розбити на речення. Для кожного речення вивести
 * слова, у яких перша та остання літери співпадають. Результат вивести у
 * вигляді таблиці.</li>
 * <li>Ввести текст. Текст розбити на речення. Для кожного речення знайти та
 * надрукувати всі слова максимальної та всі слова мінімальної довжини.
 * Результат вивести у вигляді таблиці.</li>
 * <li>Ввести текст. Після кожного слова тексту, що закінчується заданим
 * символом, вставити зазначений рядок. Вивести початковий текст та
 * результат.</li>
 * <li>Ввести текст. У тексті знайти та вивести всі слова-паліндроми (однаково
 * читається в обох напрямках - зліва направо та справа наліво. Наприклад:
 * "noon", "civic", "radar", "level", "rotor", "refer").</li>
 * </ol>
 *
 * @author malokhvii-eduard (malokhvii.ee@gmail.com)
 */
package ua.khpi.oop.malokhvii03;
